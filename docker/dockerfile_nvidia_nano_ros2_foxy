#example to build dockerfile
FROM dustynv/ros:foxy-ros-base-l4t-r35.2.1 as base
# SHELL [ "/bin/bash" , "-c" ]

# # Install language
RUN apt-get update && apt-get install -y \
  locales \
  && locale-gen en_US.UTF-8 \
  && update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8 \
  && rm -rf /var/lib/apt/lists/*
ENV LANG en_US.UTF-8

# Install timezone
RUN ln -fs /usr/share/zoneinfo/UTC /etc/localtime \
  && export DEBIAN_FRONTEND=noninteractive \
  && apt-get update \
  && apt-get install -y tzdata \
  && dpkg-reconfigure --frontend noninteractive tzdata \
  && rm -rf /var/lib/apt/lists/*

RUN apt-get update && apt-get -y upgrade \
    && rm -rf /var/lib/apt/lists/*

# # Install common programs
# RUN apt-get update && apt-get install -y --no-install-recommends \
#     curl \
#     gnupg2 \
#     lsb-release \
#     sudo \
#     software-properties-common \
#     wget \
#     && rm -rf /var/lib/apt/lists/*

RUN apt-get update && apt-get install -y --no-install-recommends \
  bash-completion \
  build-essential \
  cmake \
  gdb \
  git \
  openssh-client \
  python3-argcomplete \
  python3-pip \
  ros-dev-tools \
  python3-colcon-common-extensions \
  vim \
  && rm -rf /var/lib/apt/lists/* \
  && rosdep init || echo "rosdep already initialized"

COPY ./docker/entrypoint.sh /
ENTRYPOINT [ "/entrypoint.sh" ]
# ###########################################
# #  Full Image
# ###########################################
FROM base AS full

#Pip install pymavlink and casadi 
RUN pip3 install pymavlink casadi

RUN cd /home/ && \
    mkdir -p /drone_ws/src 


#make workspace and directory for source code
WORKDIR /drone_ws/src

RUN source /opt/ros/foxy/setup.bash && \
    git clone https://github.com/jn89b/mpc_ros.git && \
    git clone https://github.com/jn89b/drone_ros.git && \
    cd ../ \
    && colcon build --symlink-install
#source the workspace
# RUN echo "source install/setup.bash" >> ..//home/.bashrc

# # Set up the entrypoint
WORKDIR /drone_ws/
COPY ./docker/entrypoint.sh /